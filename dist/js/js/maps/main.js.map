{"version":3,"sources":["main.js"],"names":["removeClass","node","className","classList","contains","remove","removeArrayItem","array","item","index","indexOf","filter","id","updateCompletedRegions","event","eventElement","currentTarget","document","querySelector","regionAnswer","organAnswer","regionID","parseInt","currentRegion","getAttribute","dataKey","setAttribute","value","answersArray","selectedRegion","checked","selectedOrgans","push","organArray","organIDs","i","length","completedRegions","style","visibility","regionsCenterNodeArray","forEach","add","localStorage","setItem","JSON","stringify","revealAnswer","addSelectClass","parentNode","resetAnswers","checkboxesNodeArray","checkbox","getAnswers","storedOrganAnswersArray","storedRegionAnswer","organId","resetRegionClass","prevRegion","restartQuiz","removeItem","obj","region","quizStarted","welcomeMsgEl","display","regionPanel","quizWrapper","border","displayQuiz","preventDefault","updatePanel","organID","targetClick","getElementById","innerHTML","regionLoc","regionObj","organsNodeArray","querySelectorAll","organInput","regionName","getItem","parse","regionsNodeArray","restartBtn","isTrueSet","addEventListener","attachEvent"],"mappings":"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","file":"../../main.js","sourcesContent":["(function(){\r\n    let answersArray = [\r\n        {\r\n            id:1,\r\n            regionLoc:'Upper left region',\r\n            regionName:'Right hypochondriac region​',\r\n            organIDs:[1,2,3],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:2,\r\n            regionLoc:'Upper center region​​',\r\n            regionName:'Epigastric region​',\r\n            organIDs:[4,1,5,3,6],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:3,\r\n            regionLoc:'Upper right region​',\r\n            regionName:'Left hypochondriac region​',\r\n            organIDs:[4,1,6,7],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:4,\r\n            regionLoc:'Center left region​',\r\n            regionName:'Right lumber region​',\r\n            organIDs:[1,8,9,3],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:5,\r\n            regionLoc:'Center center region​',\r\n            regionName:'Umbilical region​',\r\n            organIDs:[4,5,8,10],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:6,\r\n            regionLoc:'Center right region​',\r\n            regionName:'Left lumbar region​',\r\n            organIDs:[8,11,6],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:7,\r\n            regionLoc:'Lower left region​',\r\n            regionName:'Right iliac region​',\r\n            organIDs:[8,12,13,9],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:8,\r\n            regionLoc:'Lower center region​',\r\n            regionName:'Hypogastric region​',\r\n            organIDs:[8,14,15],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        },\r\n        {\r\n            id:9,\r\n            regionLoc:'Lower right region​',\r\n            regionName:'Left iliac region​',\r\n            organIDs:[8,11,14],\r\n            selectedRegion:null,\r\n            selectedOrgans:[]\r\n        }\r\n    ]\r\n\r\n    if (typeof localStorage.getItem('answersArray') !== 'undefined' && localStorage.getItem('answersArray') !== null) {\r\n        answersArray = JSON.parse(localStorage.getItem('answersArray'));    \r\n    }\r\n\r\n    let quizStarted = false,\r\n    currentRegion = document.getElementById('region'),\r\n    completedRegions = [];\r\n\r\n    if (typeof localStorage.getItem('completedRegions') !== 'undefined' && localStorage.getItem('completedRegions') !== null) {\r\n        completedRegions = JSON.parse(localStorage.getItem('completedRegions'));    \r\n    }\r\n\r\n    let welcomeMsgEl = document.getElementById('intro-slider'),\r\n    regionsNodeArray = document.querySelectorAll('.stomach-regions--region'),\r\n    regionsCenterNodeArray = document.querySelectorAll('span.stomach-regions--region--center'),\r\n    restartBtn = document.getElementById('restart-quiz'),\r\n    quizWrapper = document.querySelector('.stomach-region-quiz'),\r\n    regionPanel = document.getElementById('regions-panel'),\r\n    checkboxesNodeArray = document.querySelectorAll('.organ-checkbox--input');\r\n\r\n    if (typeof localStorage.getItem('quizStarted') !== 'undefined' && localStorage.getItem('quizStarted') !== null) {\r\n        quizStarted = localStorage.getItem('quizStarted');    \r\n        var isTrueSet = (quizStarted === 'true');\r\n        \r\n        if(isTrueSet === true){\r\n            updateCompletedRegions();\r\n        }  \r\n    }\r\n\r\n    if(welcomeMsgEl.addEventListener){\r\n        welcomeMsgEl.addEventListener(\"click\", displayQuiz, false);  \r\n    }else if(welcomeMsgEl.attachEvent){\r\n        welcomeMsgEl.attachEvent('onclick', displayQuiz);            \r\n    }\r\n    \r\n    regionsNodeArray.forEach(region => {\r\n        if(region.addEventListener){\r\n            region.addEventListener(\"click\", displayQuiz, false);  \r\n        }else if(region.attachEvent){\r\n            region.attachEvent('onclick', displayQuiz);            \r\n        }    \r\n    });\r\n    \r\n    if(restartBtn.addEventListener){\r\n        restartBtn.addEventListener(\"click\", restartQuiz, false);  \r\n    }else if(restartBtn.attachEvent){\r\n        restartBtn.attachEvent('onclick', restartQuiz);            \r\n    }\r\n\r\n    if(currentRegion.addEventListener){\r\n        currentRegion.addEventListener(\"change\", revealAnswer, false);  \r\n    }else if(currentRegion.attachEvent){\r\n        currentRegion.attachEvent('onchange', revealAnswer);            \r\n    }\r\n\r\n    checkboxesNodeArray.forEach(checkbox => {\r\n        if(checkbox.addEventListener){\r\n            checkbox.addEventListener(\"change\", updateCompletedRegions, false);  \r\n        }else if(checkbox.attachEvent){\r\n            checkbox.attachEvent('onchange', updateCompletedRegions);            \r\n        }    \r\n    });\r\n\r\n    function removeClass(node,className){\r\n        if(node.classList.contains(className)){\r\n            node.classList.remove(className);\r\n        }\r\n    }\r\n\r\n    function removeArrayItem(array,item)\r\n    {  \r\n        let index = array.indexOf(item);       \r\n        if(index !== -1){            \r\n            array = array.filter(function(id) { \r\n                    return id !== item;\r\n            });\r\n        }   \r\n        return array;\r\n    }\r\n\r\n    function updateCompletedRegions(event){\r\n        let eventElement;\r\n        if (typeof event !== 'undefined' && event !== null) { \r\n            eventElement = event.currentTarget;\r\n        }else {\r\n            eventElement =  document.querySelector(\".stomach-regions--region[data-key='1']\");\r\n        }    \r\n        let regionAnswer = true,\r\n        organAnswer = true,\r\n        regionID = parseInt(currentRegion.getAttribute('data-key')),        \r\n        dataKey = parseInt(eventElement.getAttribute('data-key')),\r\n        i;   \r\n\r\n        if(eventElement.getAttribute('aria-checked')){\r\n            switch(eventElement.getAttribute('aria-checked')){\r\n                case \"true\":\r\n                    eventElement.setAttribute('aria-checked','false');\r\n                    break;\r\n                case \"false\":\r\n                    eventElement.setAttribute('aria-checked','true');\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        if(eventElement.classList.contains('input--select')){\r\n            if(eventElement.value > 0) {\r\n                answersArray[regionID - 1].selectedRegion = parseInt(eventElement.value);\r\n            }\r\n        }\r\n        else \r\n        {                    \r\n            if(eventElement.checked === true) {\r\n                answersArray[regionID - 1].selectedOrgans = removeArrayItem(answersArray[regionID - 1].selectedOrgans, dataKey);\r\n                answersArray[regionID - 1].selectedOrgans.push(dataKey);\r\n            } else {\r\n                answersArray[regionID - 1].selectedOrgans = removeArrayItem(answersArray[regionID - 1].selectedOrgans, dataKey);\r\n            }        \r\n        }\r\n        \r\n        if(parseInt(currentRegion.value) === parseInt(currentRegion.getAttribute('data-key'))){\r\n            regionAnswer = true;\r\n        }else{\r\n            regionAnswer = false;\r\n        }\r\n\r\n        let organArray = answersArray[regionID - 1].organIDs; \r\n        for (let i = 0; i < organArray.length; i++) { \r\n            if(document.querySelector(\".organ-checkbox--input[data-key='\"+ organArray[i]+\"']\").checked === false){\r\n                organAnswer = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(regionAnswer === true && organAnswer === true){\r\n            completedRegions = removeArrayItem(completedRegions,regionID);         \r\n            completedRegions.push(regionID);\r\n            document.querySelector(\".section-complete\").style.visibility = \"visible\";            \r\n        }else {\r\n            completedRegions = removeArrayItem(completedRegions,regionID); \r\n            document.querySelector(\".section-complete\").style.visibility = \"hidden\";                 \r\n        }\r\n        \r\n        regionsCenterNodeArray.forEach(node => {\r\n            removeClass(node, 'stomach-regions--region--center__complete'); \r\n        });\r\n        completedRegions.forEach(id => { \r\n            document.querySelector(\".stomach-regions--region--center[data-key='\"+ id+\"']\").classList.add('stomach-regions--region--center__complete');\r\n        });    \r\n    \r\n        localStorage.setItem('completedRegions',JSON.stringify(completedRegions));\r\n        localStorage.setItem('answersArray',JSON.stringify(answersArray));                                  \r\n    }\r\n\r\n\r\n    function revealAnswer(event){  \r\n        addSelectClass();\r\n        updateCompletedRegions(event);\r\n    }\r\n\r\n    function addSelectClass(){\r\n        if(parseInt(currentRegion.value) !== 0) {\r\n\r\n            if(parseInt(currentRegion.value) === parseInt(currentRegion.getAttribute('data-key'))) {\r\n            \r\n                removeClass(currentRegion,'input--select__correct');       \r\n                removeClass(currentRegion,'input--select__incorrect');       \r\n                removeClass(currentRegion.parentNode,'select-wrap__correct');       \r\n                removeClass(currentRegion.parentNode,'select-wrap__incorrect');               \r\n                currentRegion.parentNode.classList.add('select-wrap__correct');       \r\n                currentRegion.classList.add('input--select__correct'); \r\n            } else {\r\n                removeClass(currentRegion,'input--select__correct');       \r\n                removeClass(currentRegion,'input--select__incorrect');     \r\n                removeClass(currentRegion.parentNode,'select-wrap__correct');       \r\n                removeClass(currentRegion.parentNode,'select-wrap__incorrect');               \r\n                currentRegion.parentNode.classList.add('select-wrap__incorrect');     \r\n                currentRegion.classList.add('input--select__incorrect'); \r\n            }\r\n        }   \r\n    }\r\n\r\n    function resetAnswers() {    \r\n\r\n        checkboxesNodeArray.forEach(checkbox => {              \r\n            checkbox.checked = false\r\n        });\r\n        removeClass(currentRegion,'input--select__correct');       \r\n        removeClass(currentRegion,'input--select__incorrect');  \r\n        removeClass(currentRegion.parentNode,'select-wrap__correct');       \r\n        removeClass(currentRegion.parentNode,'select-wrap__incorrect');         \r\n        currentRegion.value = 0;\r\n    }\r\n\r\n    function getAnswers(id) {\r\n        let storedOrganAnswersArray = answersArray[id - 1].selectedOrgans;\r\n        let storedRegionAnswer = answersArray[id - 1].selectedRegion; \r\n        \r\n\r\n        if(storedOrganAnswersArray.length > 0){\r\n            storedOrganAnswersArray.forEach(organId => {\r\n                document.querySelector(\".organ-checkbox--input[data-key='\"+ organId+\"']\").checked = true;\r\n            });        \r\n        }    \r\n        if(storedRegionAnswer !== null && storedRegionAnswer !== 0){            \r\n            currentRegion.value = storedRegionAnswer; \r\n            if(parseInt(currentRegion.value) === id) {\r\n                removeClass(currentRegion,'input--select__correct');       \r\n                removeClass(currentRegion,'input--select__incorrect');     \r\n                removeClass(currentRegion.parentNode,'select-wrap__correct');       \r\n                removeClass(currentRegion.parentNode,'select-wrap__incorrect');               \r\n                currentRegion.parentNode.classList.add('select-wrap__correct');    \r\n                currentRegion.classList.add('input--select__correct'); \r\n            }else {\r\n                removeClass(currentRegion,'input--select__correct');       \r\n                removeClass(currentRegion,'input--select__incorrect');     \r\n                removeClass(currentRegion.parentNode,'select-wrap__correct');       \r\n                removeClass(currentRegion.parentNode,'select-wrap__incorrect');               \r\n                currentRegion.parentNode.classList.add('select-wrap__incorrect');  \r\n                currentRegion.classList.add('input--select__incorrect'); \r\n            }     \r\n        }      \r\n    }\r\n\r\n    \r\n    function resetRegionClass(){     \r\n        if(currentRegion !== undefined) {        \r\n            \r\n            let dataKey = parseInt(currentRegion.getAttribute('data-key'));     \r\n            let prevRegion = document.querySelector(\".stomach-regions--region[data-key='\"+dataKey+\"']\");\r\n            removeClass(prevRegion, 'stomach-regions--region__active');\r\n        }    \r\n    }\r\n\r\n    \r\n    function restartQuiz(){    \r\n        \r\n        localStorage.removeItem('completedRegions');\r\n        localStorage.removeItem('answersArray');\r\n        completedRegions = [];\r\n        answersArray.forEach(obj => {\r\n            obj.selectedOrgans =  [];       \r\n            obj.selectedRegion =  null;      \r\n        });\r\n        regionsCenterNodeArray.forEach(region => {\r\n            removeClass(region,'stomach-regions--region--center__complete');\r\n        });\r\n\r\n        resetRegionClass();\r\n        resetAnswers();\r\n        quizStarted = false;\r\n        welcomeMsgEl.style.display = 'block';\r\n        regionPanel.style.display = 'none';\r\n        quizWrapper.style.border = '0.2rem solid #317dff';\r\n\r\n        localStorage.setItem('quizStarted', false);   \r\n    }\r\n\r\n    function displayQuiz(event) {      \r\n\r\n        event.preventDefault();\r\n\r\n        if(quizStarted === true){\r\n            resetAnswers();           \r\n            updatePanel(event);  \r\n        }else {\r\n            quizStarted = true;\r\n            welcomeMsgEl.style.display = 'none';\r\n            regionPanel.style.display = 'block';\r\n            quizWrapper.style.border = '0.2rem solid #f1f1f1';\r\n            updatePanel(event);  \r\n        }  \r\n        localStorage.setItem('quizStarted', true);       \r\n    }\r\n\r\n    function updatePanel(event){\r\n\r\n        let regionID,organID, targetClick = event.currentTarget, currentRegion = document.getElementById('region');    \r\n\r\n        resetRegionClass();\r\n    \r\n        if(targetClick.getAttribute('id') === \"intro-slider\"){\r\n            regionID = 1;\r\n            targetClick = document.querySelector('.stomach-regions--region[data-key=\"1\"]');  \r\n            \r\n        }else {\r\n            regionID = parseInt(targetClick.getAttribute('data-key'));\r\n        }\r\n        \r\n        if(completedRegions.indexOf(regionID) < 0) {\r\n            document.querySelector('.section-complete').style.visibility = \"hidden\";\r\n        }else{\r\n            document.querySelector('.section-complete').style.visibility = \"visible\";\r\n        }\r\n\r\n        getAnswers(regionID);\r\n\r\n        targetClick.classList.add('stomach-regions--region__active');\r\n\r\n        document.getElementById('region-heading').innerHTML = answersArray[regionID - 1].regionLoc;\r\n        currentRegion.setAttribute('data-key', regionID);\r\n\r\n        let regionObj = answersArray[regionID - 1];\r\n        let organsNodeArray = document.querySelectorAll('.organ-checkbox--name');\r\n    \r\n        organsNodeArray.forEach(organInput => {\r\n            organID = parseInt(organInput.getAttribute('data-key'));\r\n            if(regionObj.organIDs.indexOf(organID) < 0){\r\n                removeClass(organInput,'organ-checkbox--name__incorrect');\r\n                removeClass(organInput,'organ-checkbox--name__correct');           \r\n                organInput.classList.add('organ-checkbox--name__incorrect');\r\n            }\r\n            else {\r\n                removeClass(organInput,'organ-checkbox--name__incorrect');\r\n                removeClass(organInput,'organ-checkbox--name__correct');  \r\n                organInput.classList.add('organ-checkbox--name__correct');\r\n            }\r\n        });\r\n    }\r\n})();"]}