{"version":3,"sources":["main.js"],"names":["answersArray","id","regionLoc","regionName","organIDs","selectedRegion","selectedOrgans","quizStarted","currentRegion","welcomeMsgEl","document","getElementById","regionsNodeArray","querySelectorAll","restartBtn","quizWrapper","querySelector","regionPanel","regionSelect","optionNodeArray","addEventListener","displayQuiz","attachEvent","forEach","region","restartQuiz","getResult","resetClass","node","className","classList","contains","remove","event","parseInt","value","getAttribute","add","resetAnswers","checkboxesNodeArray","checkbox","checked","style","display","border","updatePanel","regionID","organID","targetClick","currentTarget","undefined","console","log","firstChild","innerHTML","setAttribute","regionObj","organsNodeArray","organInput","indexOf"],"mappings":"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","file":"../main.js","sourcesContent":["//VARIABLES\r\n\r\n//answer array\r\nconst answersArray = [\r\n    {\r\n        id:1,\r\n        regionLoc:'Upper Left Region',\r\n        regionName:'Right Hypochondriac Region​',\r\n        organIDs:[1,2,3],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:2,\r\n        regionLoc:'Upper Center Region​​',\r\n        regionName:'Epigastric Region​',\r\n        organIDs:[4,1,5,3,6],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:3,\r\n        regionLoc:'Upper right region​',\r\n        regionName:'Left Hypochondriac Region​',\r\n        organIDs:[4,1,6,7],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:4,\r\n        regionLoc:'Center left region​',\r\n        regionName:'Right Lumber Region​',\r\n        organIDs:[1,8,9,3],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:5,\r\n        regionLoc:'Center center region​',\r\n        regionName:'Umbilical Region​',\r\n        organIDs:[4,5,8,10],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:6,\r\n        regionLoc:'Center right region​',\r\n        regionName:'Left Lumbar Region​',\r\n        organIDs:[8,11,6],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:7,\r\n        regionLoc:'Lower left region​',\r\n        regionName:'Right Iliac Region​',\r\n        organIDs:[8,12,13,9],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:8,\r\n        regionLoc:'Lower center region​',\r\n        regionName:'Hypogastric Region​',\r\n        organIDs:[8,14,15],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    },\r\n    {\r\n        id:9,\r\n        regionLoc:'Lower right region​',\r\n        regionName:'Left Iliac Region​',\r\n        organIDs:[8,11,14],\r\n        selectedRegion:null,\r\n        selectedOrgans:[]\r\n    }\r\n]\r\n\r\n//state variable\r\nlet quizStarted = false,\r\ncurrentRegion;\r\n\r\n//Elements\r\nlet welcomeMsgEl = document.getElementById('intro-slider'),\r\nregionsNodeArray = document.querySelectorAll('.stomach-regions--region'),\r\nrestartBtn = document.getElementById('restart-quiz'),\r\nquizWrapper = document.querySelector('.stomach-region-quiz'),\r\nregionPanel = document.getElementById('regions-panel'),\r\nregionSelect = document.getElementById('region'),\r\noptionNodeArray = regionSelect.querySelectorAll('option');\r\n\r\n//EVENTS\r\n//click on welcome message\r\nif(welcomeMsgEl.addEventListener){\r\n    welcomeMsgEl.addEventListener(\"click\", displayQuiz, false);  \r\n}else if(welcomeMsgEl.attachEvent){\r\n    welcomeMsgEl.attachEvent('onclick', displayQuiz);            \r\n}\r\n//click on regions\r\nregionsNodeArray.forEach(region => {\r\n    if(region.addEventListener){\r\n        region.addEventListener(\"click\", displayQuiz, false);  \r\n    }else if(region.attachEvent){\r\n        region.attachEvent('onclick', displayQuiz);            \r\n    }    \r\n});\r\n//click on restart\r\nif(restartBtn.addEventListener){\r\n    restartBtn.addEventListener(\"click\", restartQuiz, false);  \r\n}else if(restartBtn.attachEvent){\r\n    restartBtn.attachEvent('onclick', restartQuiz);            \r\n}\r\n\r\n//on select\r\nif(regionSelect.addEventListener){\r\n    regionSelect.addEventListener(\"click\", getResult, false);  \r\n}else if(regionSelect.attachEvent){\r\n    regionSelect.attachEvent('onclick', getResult);            \r\n}\r\n\r\n//input--select__correct\r\n//input--select__incorrect\r\nfunction resetClass(node,className){\r\n    if(node.classList.contains(className)){\r\n        node.classList.remove(className);\r\n    }\r\n    // if(node.classList.contains('input--select__incorrect')){\r\n    //     node.classList.remove('input--select__incorrect')\r\n    // }     \r\n}\r\n\r\n\r\nfunction getResult(event){  \r\n    let currentRegion = document.getElementById('region');\r\n    //console.log(currentRegion.value);\r\n    if(parseInt(currentRegion.value) !== 0) {\r\n          //check the value of the data key and compare to the selected option\r\n          if(parseInt(currentRegion.value) === parseInt(currentRegion.getAttribute('data-key'))) {\r\n            resetClass(currentRegion,'input--select__correct');       \r\n            resetClass(currentRegion,'input--select__incorrect');       \r\n            currentRegion.classList.add('input--select__correct'); \r\n          } else {\r\n            resetClass(currentRegion,'input--select__correct');       \r\n            resetClass(currentRegion,'input--select__incorrect');     \r\n            currentRegion.classList.add('input--select__incorrect'); \r\n          }\r\n          //console.log('event :', event.target);\r\n          //document.getElementById('region').value\r\n          //document.getElementById('region').getAttribute('data-key');\r\n          //console.log(optionNodeArray);\r\n          //console.log( document.getElementById('region').value);\r\n    }    \r\n}\r\n\r\n//FUNCTIONS\r\n\r\n//clear answers\r\nfunction resetAnswers() {\r\n    let checkboxesNodeArray = document.querySelectorAll('.organ-checkbox--input');\r\n    checkboxesNodeArray.forEach(checkbox => {              \r\n          checkbox.checked = false\r\n    });\r\n    let currentRegion = document.getElementById('region');\r\n    resetClass(currentRegion,'input--select__correct');       \r\n    resetClass(currentRegion,'input--select__incorrect');          \r\n    currentRegion.value = 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//restart quiz\r\nfunction restartQuiz(){    \r\n    //clear elements from the previous answers\r\n    resetAnswers();\r\n    quizStarted = false;\r\n    welcomeMsgEl.style.display = 'block';\r\n    regionPanel.style.display = 'none';\r\n    quizWrapper.style.border = '0.2rem solid #317dff';\r\n\r\n}\r\n\r\n//display quiz \r\nfunction displayQuiz(event) {   \r\n    \r\n\r\n    if(quizStarted === true){\r\n        //add answers to cache\r\n        \r\n        //clear elements from the previous answers\r\n        resetAnswers();\r\n        //if browser cache exists add the selected checkboxes\r\n        \r\n\r\n        //update the elements with new answers based on first or selected region\r\n        \r\n        updatePanel(event);  \r\n    }else {\r\n        quizStarted = true;\r\n        welcomeMsgEl.style.display = 'none';\r\n        regionPanel.style.display = 'block';\r\n        quizWrapper.style.border = '0.2rem solid #f1f1f1';\r\n        //update the elements with new answers based on first or selected region\r\n        //console.log('event :', event.srcElement.hasAttribute('id'));\r\n        updatePanel(event);  \r\n    }    \r\n}\r\n\r\n//update panel with region answer key\r\nfunction updatePanel(event){\r\n    let regionID,organID, targetClick = event.currentTarget;    \r\n    //did we have a state object currentRegion\r\n    //if so please remove active class\r\n    \r\n    if(currentRegion !== undefined || currentRegion !== null) {\r\n        //\r\n        console.log('hello :');\r\n        //remove active class\r\n    }    \r\n\r\n   \r\n    if(targetClick.getAttribute('id') === \"intro-slider\"){\r\n        regionID = 1;\r\n        targetClick = document.querySelector('.stomach-regions').firstChild;\r\n        \r\n    }else {\r\n        regionID = parseInt(targetClick.getAttribute('data-key'));\r\n    }\r\n\r\n    //set the state object currentRegion\r\n    currentRegion = document.getElementById('region');\r\n    //add active class to new currentRegion\r\n    targetClick.classList.add('stomach-regions--region__active');\r\n    //event.currentTarget\r\n\r\n    document.getElementById('region-heading').innerHTML = answersArray[regionID - 1].regionLoc;\r\n    currentRegion.setAttribute('data-key', regionID);\r\n\r\n    let regionObj = answersArray[regionID - 1];\r\n    let organsNodeArray = document.querySelectorAll('.organ-checkbox--name');\r\n  \r\n    organsNodeArray.forEach(organInput => {\r\n        organID = parseInt(organInput.getAttribute('data-key'));\r\n        if(regionObj.organIDs.indexOf(organID) < 0){\r\n            resetClass(organInput,'organ-checkbox--name__incorrect');\r\n            resetClass(organInput,'organ-checkbox--name__correct');           \r\n            organInput.classList.add('organ-checkbox--name__incorrect');\r\n        }\r\n        else {\r\n            resetClass(organInput,'organ-checkbox--name__incorrect');\r\n            resetClass(organInput,'organ-checkbox--name__correct');  \r\n            organInput.classList.add('organ-checkbox--name__correct');\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\n//update the elements with new answers based on first or selected region\r\n\r\n\r\n//MY NOTES\r\n//click around on regions of the body\r\n//  changes region location and correct region \r\n// a new set of organs that includes the set of correct organs and a random set of incorrect organs\r\n\r\n//checking state variable\r\n//updating panel with Answers and fill it in with other organs\r\n\r\n//answers obj\r\n//organs obj\r\n\r\n//setting"]}